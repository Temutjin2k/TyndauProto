// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: music/music.proto

package music

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a song entity.
type Song struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  // Unique identifier for the song.
	Title           string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                             // Title of the song.
	Artist          string                 `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`                                           // Artist name.
	Album           string                 `protobuf:"bytes,4,opt,name=album,proto3" json:"album,omitempty"`                                             // Album name.
	Genre           string                 `protobuf:"bytes,5,opt,name=genre,proto3" json:"genre,omitempty"`                                             // Genre of the song.
	DurationSeconds int32                  `protobuf:"varint,6,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // Duration in seconds.
	ReleaseDate     string                 `protobuf:"bytes,7,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`              // Release date in ISO format.
	FileUrl         string                 `protobuf:"bytes,8,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`                          // URL to the song file.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Song) Reset() {
	*x = Song{}
	mi := &file_music_music_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{0}
}

func (x *Song) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Song) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Song) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Song) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *Song) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *Song) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *Song) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *Song) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

// Request to upload a new song.
type UploadSongRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Title           string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                             // Song title.
	Artist          string                 `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`                                           // Artist name.
	Album           string                 `protobuf:"bytes,3,opt,name=album,proto3" json:"album,omitempty"`                                             // Album name.
	Genre           string                 `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`                                             // Genre.
	DurationSeconds int32                  `protobuf:"varint,5,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // Duration in seconds.
	ReleaseDate     string                 `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`              // ISO format.
	Filename        string                 `protobuf:"bytes,7,opt,name=filename,proto3" json:"filename,omitempty"`                                       // Filename like "track.mp3"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UploadSongRequest) Reset() {
	*x = UploadSongRequest{}
	mi := &file_music_music_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSongRequest) ProtoMessage() {}

func (x *UploadSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSongRequest.ProtoReflect.Descriptor instead.
func (*UploadSongRequest) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{1}
}

func (x *UploadSongRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadSongRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *UploadSongRequest) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *UploadSongRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *UploadSongRequest) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *UploadSongRequest) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *UploadSongRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// Response after uploading a song.
type UploadSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // Unique ID of the uploaded song.
	UploadUrl     string                 `protobuf:"bytes,2,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"` // Presigned PUT URL to upload the actual file.
	FileUrl       string                 `protobuf:"bytes,3,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`       // Permanent public URL to access uploaded file
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadSongResponse) Reset() {
	*x = UploadSongResponse{}
	mi := &file_music_music_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSongResponse) ProtoMessage() {}

func (x *UploadSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSongResponse.ProtoReflect.Descriptor instead.
func (*UploadSongResponse) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{2}
}

func (x *UploadSongResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadSongResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *UploadSongResponse) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

// Request to get a song by ID.
type GetSongRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Song ID.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSongRequest) Reset() {
	*x = GetSongRequest{}
	mi := &file_music_music_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongRequest) ProtoMessage() {}

func (x *GetSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongRequest.ProtoReflect.Descriptor instead.
func (*GetSongRequest) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{3}
}

func (x *GetSongRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response with the song data.
type GetSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Song          *Song                  `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"` // The song details.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSongResponse) Reset() {
	*x = GetSongResponse{}
	mi := &file_music_music_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongResponse) ProtoMessage() {}

func (x *GetSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongResponse.ProtoReflect.Descriptor instead.
func (*GetSongResponse) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{4}
}

func (x *GetSongResponse) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

// Request for searching songs.
type SearchSongsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`    // Free-text search on title, artist, etc.
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // Max number of songs to return.
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"` // Pagination offset.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchSongsRequest) Reset() {
	*x = SearchSongsRequest{}
	mi := &file_music_music_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSongsRequest) ProtoMessage() {}

func (x *SearchSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSongsRequest.ProtoReflect.Descriptor instead.
func (*SearchSongsRequest) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{5}
}

func (x *SearchSongsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchSongsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchSongsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response containing matched songs.
type SearchSongsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Songs         []*Song                `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"` // List of matched songs.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchSongsResponse) Reset() {
	*x = SearchSongsResponse{}
	mi := &file_music_music_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSongsResponse) ProtoMessage() {}

func (x *SearchSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSongsResponse.ProtoReflect.Descriptor instead.
func (*SearchSongsResponse) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{6}
}

func (x *SearchSongsResponse) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

// Request to delete a song by ID.
type DeleteSongRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Song ID to delete.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSongRequest) Reset() {
	*x = DeleteSongRequest{}
	mi := &file_music_music_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongRequest) ProtoMessage() {}

func (x *DeleteSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongRequest.ProtoReflect.Descriptor instead.
func (*DeleteSongRequest) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteSongRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response confirming deletion.
type DeleteSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates success of the deletion.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSongResponse) Reset() {
	*x = DeleteSongResponse{}
	mi := &file_music_music_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongResponse) ProtoMessage() {}

func (x *DeleteSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongResponse.ProtoReflect.Descriptor instead.
func (*DeleteSongResponse) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSongResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_music_music_proto protoreflect.FileDescriptor

const file_music_music_proto_rawDesc = "" +
	"\n" +
	"\x11music/music.proto\x12\x05music\x1a\x1cgoogle/api/annotations.proto\"\xd9\x01\n" +
	"\x04Song\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x03 \x01(\tR\x06artist\x12\x14\n" +
	"\x05album\x18\x04 \x01(\tR\x05album\x12\x14\n" +
	"\x05genre\x18\x05 \x01(\tR\x05genre\x12)\n" +
	"\x10duration_seconds\x18\x06 \x01(\x05R\x0fdurationSeconds\x12!\n" +
	"\frelease_date\x18\a \x01(\tR\vreleaseDate\x12\x19\n" +
	"\bfile_url\x18\b \x01(\tR\afileUrl\"\xd7\x01\n" +
	"\x11UploadSongRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x02 \x01(\tR\x06artist\x12\x14\n" +
	"\x05album\x18\x03 \x01(\tR\x05album\x12\x14\n" +
	"\x05genre\x18\x04 \x01(\tR\x05genre\x12)\n" +
	"\x10duration_seconds\x18\x05 \x01(\x05R\x0fdurationSeconds\x12!\n" +
	"\frelease_date\x18\x06 \x01(\tR\vreleaseDate\x12\x1a\n" +
	"\bfilename\x18\a \x01(\tR\bfilename\"^\n" +
	"\x12UploadSongResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x02 \x01(\tR\tuploadUrl\x12\x19\n" +
	"\bfile_url\x18\x03 \x01(\tR\afileUrl\" \n" +
	"\x0eGetSongRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"2\n" +
	"\x0fGetSongResponse\x12\x1f\n" +
	"\x04song\x18\x01 \x01(\v2\v.music.SongR\x04song\"X\n" +
	"\x12SearchSongsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"8\n" +
	"\x13SearchSongsResponse\x12!\n" +
	"\x05songs\x18\x01 \x03(\v2\v.music.SongR\x05songs\"#\n" +
	"\x11DeleteSongRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\".\n" +
	"\x12DeleteSongResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xe7\x02\n" +
	"\x05Music\x12Z\n" +
	"\x06Upload\x12\x18.music.UploadSongRequest\x1a\x19.music.UploadSongResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/music/upload\x12P\n" +
	"\aGetSong\x12\x15.music.GetSongRequest\x1a\x16.music.GetSongResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/music/{id}\x12Y\n" +
	"\x06Search\x12\x19.music.SearchSongsRequest\x1a\x1a.music.SearchSongsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/music/search\x12U\n" +
	"\x06Delete\x12\x18.music.DeleteSongRequest\x1a\x19.music.DeleteSongResponse\"\x16\x82\xd3\xe4\x93\x02\x10*\x0e/v1/music/{id}B6Z4github.com/Temutjin2k/TyndauProto/gen/go/music;musicb\x06proto3"

var (
	file_music_music_proto_rawDescOnce sync.Once
	file_music_music_proto_rawDescData []byte
)

func file_music_music_proto_rawDescGZIP() []byte {
	file_music_music_proto_rawDescOnce.Do(func() {
		file_music_music_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_music_music_proto_rawDesc), len(file_music_music_proto_rawDesc)))
	})
	return file_music_music_proto_rawDescData
}

var file_music_music_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_music_music_proto_goTypes = []any{
	(*Song)(nil),                // 0: music.Song
	(*UploadSongRequest)(nil),   // 1: music.UploadSongRequest
	(*UploadSongResponse)(nil),  // 2: music.UploadSongResponse
	(*GetSongRequest)(nil),      // 3: music.GetSongRequest
	(*GetSongResponse)(nil),     // 4: music.GetSongResponse
	(*SearchSongsRequest)(nil),  // 5: music.SearchSongsRequest
	(*SearchSongsResponse)(nil), // 6: music.SearchSongsResponse
	(*DeleteSongRequest)(nil),   // 7: music.DeleteSongRequest
	(*DeleteSongResponse)(nil),  // 8: music.DeleteSongResponse
}
var file_music_music_proto_depIdxs = []int32{
	0, // 0: music.GetSongResponse.song:type_name -> music.Song
	0, // 1: music.SearchSongsResponse.songs:type_name -> music.Song
	1, // 2: music.Music.Upload:input_type -> music.UploadSongRequest
	3, // 3: music.Music.GetSong:input_type -> music.GetSongRequest
	5, // 4: music.Music.Search:input_type -> music.SearchSongsRequest
	7, // 5: music.Music.Delete:input_type -> music.DeleteSongRequest
	2, // 6: music.Music.Upload:output_type -> music.UploadSongResponse
	4, // 7: music.Music.GetSong:output_type -> music.GetSongResponse
	6, // 8: music.Music.Search:output_type -> music.SearchSongsResponse
	8, // 9: music.Music.Delete:output_type -> music.DeleteSongResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_music_music_proto_init() }
func file_music_music_proto_init() {
	if File_music_music_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_music_music_proto_rawDesc), len(file_music_music_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_music_music_proto_goTypes,
		DependencyIndexes: file_music_music_proto_depIdxs,
		MessageInfos:      file_music_music_proto_msgTypes,
	}.Build()
	File_music_music_proto = out.File
	file_music_music_proto_goTypes = nil
	file_music_music_proto_depIdxs = nil
}
